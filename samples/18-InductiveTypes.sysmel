Inductive: Arithmetic withAlternatives: [
    Record: LiteralInteger withFields: #{value: Integer}.
    Record: Plus withFields: #{leftOperand: Arithmetic. rightOperand: Arithmetic}.
    Record: Minus withFields: #{leftOperand: Arithmetic. rightOperand: Arithmetic}.
].

$sumExpression := Arithmetic(Plus#{
    leftOperand: Arithmetic(LiteralInteger{42}).
    rightOperand: Arithmetic(LiteralInteger{5})
}).
printLine(sumExpression).

match: sumExpression ofType: Arithmetic withPatterns: #{
    $(LiteralInteger)literal : printLine("Literal:" literal value).
    $(Plus)plus : printLine("Plus: ". plus leftOperand . "+" . plus rightOperand).
    $(Minus)minus : printLine("Minus: ". minus leftOperand . "-" . minus rightOperand).
}.

$evaluateExpression($(Arithmetic)expression :: Integer) := {
    match: expression ofType: Arithmetic withPatterns: #{
        $(LiteralInteger)literal : literal value.
        $(Plus)plus : evaluateExpression(plus leftOperand) + evaluateExpression(plus rightOperand).
        $(Minus)minus : evaluateExpression(minus leftOperand) - evaluateExpression(minus rightOperand).
    }
}.

printLine(evaluateExpression(sumExpression)).
